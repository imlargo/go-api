definitions:
  auth.TokenPair:
    properties:
      access_token:
        type: string
      expires_at:
        type: string
      refresh_token:
        type: string
    type: object
  models.Error:
    properties:
      code:
        type: integer
      message:
        type: string
      status:
        type: string
    type: object
  models.LoginPayload:
    properties:
      code:
        type: string
    required:
    - code
    type: object
  models.RefreshTokenPayload:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  models.SuccessData-models_User:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/models.User'
      status:
        type: string
    type: object
  models.SuccessList-models_User:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/models.User'
        type: array
      status:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      picture:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact:
    name: Default
    url: https://default.dev
  description: Default backend service for a web application.
  license:
    name: MIT
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Default API
  version: "1.0"
paths:
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: Search All Users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessList-models_User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Search All Users
      tags:
      - users
  /api/v1/users/{id}:
    get:
      consumes:
      - application/json
      description: Get User By ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessData-models_User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Search User By ID
      tags:
      - users
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a token upon successful login.
      parameters:
      - description: Login payload
        in: body
        name: Input
        required: true
        schema:
          $ref: '#/definitions/models.LoginPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.TokenPair'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: User Login
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refreshes the authentication token for a user.
      parameters:
      - description: Payload
        in: body
        name: Input
        required: true
        schema:
          $ref: '#/definitions/models.RefreshTokenPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.TokenPair'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - BearerAuth: []
      summary: Refresh token
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
