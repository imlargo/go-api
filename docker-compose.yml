version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/go_api?sslmode=disable
      - REDIS_URL=redis://redis:6379
      - API_URL=localhost
      - PORT=8000
      - RATE_LIMIT_MAX_REQUESTS=100
      - RATE_LIMIT_TIMEFRAME=60
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_ISSUER=go-api
      - JWT_AUDIENCE=go-api-users
      - API_KEY=your-api-key-change-in-production
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    networks:
      - go-api-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=go_api
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - go-api-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - go-api-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Optional: Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - go-api-network
    profiles:
      - tools

  # Optional: pgAdmin for PostgreSQL management
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - go-api-network
    profiles:
      - tools

networks:
  go-api-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: